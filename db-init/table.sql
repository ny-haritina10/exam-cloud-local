CREATE TABLE public.admin_credentials (
	id serial4 NOT NULL,
	admin_email varchar(255) NOT NULL,
	admin_password varchar(255) NOT NULL,
	"token" varchar(255) NULL,
	token_expires_at timestamp NULL,
	token_last_used_at timestamp NULL,
	CONSTRAINT admin_credentials_pkey PRIMARY KEY (id)
);

CREATE TABLE public.commission (
	id bigserial NOT NULL,
	percentage_sell numeric(38, 2) NOT NULL,
	percentage_buy numeric(38, 2) NOT NULL,
	date_reference timestamp(6) NOT NULL,
	CONSTRAINT commission_pkey PRIMARY KEY (id)
);

CREATE TABLE public.crypto (
	id bigserial NOT NULL,
	"label" varchar(255) NOT NULL,
	CONSTRAINT crypto_pkey PRIMARY KEY (id)
);

CREATE TABLE public.transactions (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	date_transaction timestamp(6) NOT NULL,
	deposit float8 NOT NULL,
	id_user int8 NOT NULL,
	withdrawal float8 NOT NULL,
	validated_at timestamp NULL,
	approved_by_admin bool DEFAULT false NULL,
	CONSTRAINT transactions_pkey PRIMARY KEY (id)
);

CREATE TABLE public.users (
	id bigserial NOT NULL,
	user_name varchar(255) NOT NULL,
	user_email varchar(255) NOT NULL,
	user_password varchar(255) NOT NULL,
	user_birthday date NOT NULL,
	token_last_used_at timestamp NULL,
	token_expires_at timestamp NULL,
	"token" varchar(255) NULL,
	email_verification_code varchar(255) NULL,
	verification_code_expires_at timestamp NULL,
	email_verified_at timestamp NULL,
	login_attempts int4 DEFAULT 0 NULL,
	last_login_attempt_at timestamp NULL,
	reset_attempts_token varchar(255) NULL,
	reset_attempts_token_expires_at timestamp NULL,
	verification_attempts int4 DEFAULT 0 NULL,
	last_verification_attempt_at timestamp NULL,
	reset_verification_attempts_token varchar(255) NULL,
	reset_verification_attempts_token_expires_at timestamp NULL,
	"role" varchar(255) NULL,
	CONSTRAINT users_pkey PRIMARY KEY (id)
);

CREATE TABLE public.crypto_cours (
	id bigserial NOT NULL,
	id_crypto int8 NOT NULL,
	cours numeric(38, 2) NOT NULL,
	date_cours timestamp NOT NULL,
	CONSTRAINT crypto_cours_pkey PRIMARY KEY (id),
	CONSTRAINT crypto_cours_id_crypto_fkey FOREIGN KEY (id_crypto) REFERENCES public.crypto(id)
);

CREATE TABLE public.crypto_transactions (
	id bigserial NOT NULL,
	id_user int8 NOT NULL,
	id_crypto int8 NOT NULL,
	is_sale bool NOT NULL,
	is_purchase bool NOT NULL,
	quantity float8 NOT NULL,
	date_transaction timestamp NOT NULL,
	CONSTRAINT crypto_transactions_pkey PRIMARY KEY (id),
	CONSTRAINT crypto_transactions_id_crypto_fkey FOREIGN KEY (id_crypto) REFERENCES public.crypto(id),
	CONSTRAINT crypto_transactions_id_user_fkey FOREIGN KEY (id_user) REFERENCES public.users(id)
);